{"version":3,"file":"my-content-bar.js","sources":["components/my-content-bar/my-content-bar.vue","../../HBuilderX/plugins/uniapp-cli-vite/uniComponent:/RDoveGlhb2NoZW5neHUvcHJvamVjdC1zcGFjZS91bmkt5p2P5p6X5pil5pqWL2NvbXBvbmVudHMvbXktY29udGVudC1iYXIvbXktY29udGVudC1iYXIudnVl"],"sourcesContent":["<template>\n\t<view class=\"container\">\n\t\t<!-- 骨架屏 -->\n\t\t<view v-if=\"showContentSkeleton\" class=\"skeleton-container\">\n\t\t\t<!-- 模拟瀑布流布局 -->\n\t\t\t<view class=\"skeleton-column\" v-for=\"i in 2\" :key=\"i\">\n\t\t\t\t<view class=\"skeleton-item\" v-for=\"j in 5\" :key=\"j\">\n\t\t\t\t\t<!-- 图片占位 -->\n\t\t\t\t\t<view class=\"skeleton-image\"></view>\n\t\t\t\t\t<!-- 文字占位 -->\n\t\t\t\t\t<view class=\"skeleton-text-line name\"></view>\n\t\t\t\t\t<view class=\"skeleton-text-line property\"></view>\n\t\t\t\t\t<view class=\"skeleton-text-line effect\"></view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t\t<!-- 加载进度条 -->\n\t\t\t<view class=\"skeleton-loading-indicator\">\n\t\t\t\t<text class=\"loading-text\">加载中 {{ loadingProgress }}%</text>\n\t\t\t\t<view class=\"loading-bar-container\">\n\t\t\t\t\t<view \n\t\t\t\t\t\tclass=\"loading-bar-progress\" \n\t\t\t\t\t\t:style=\"{ width: `${loadingProgress}%` }\">\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\n\t\t\n\t\t<view class=\"visible-container\">\n\t\t\t<!-- 瀑布流列容器：v-for生成指定列数 -->\n\t\t\t<view class=\"column\" v-for=\"(col, colIndex) in columnData\" :key=\"colIndex\">\n\t\t\t\t<view\n\t\t\t\t\tv-for=\"item in col\"\n\t\t\t\t\t:key=\"item.id\"\n\t\t\t\t\tclass=\"medicine-box\"\n\t\t\t\t\t@click=\"goToContent(item.name)\"\n\t\t\t\t>\n\t\t\t\t\t<!-- 图片 -->\n\t\t\t\t\t<image\n\t\t\t\t\t\t:src=\"getMedicineImage(item.name)\"\n\t\t\t\t\t\tmode=\"aspectFill\"\n\t\t\t\t\t\tclass=\"medicine-image\"\n\t\t\t\t\t\tlazy-load=\"true\"\n\t\t\t\t\t></image>\n\t\t\t\t\t<!-- 商品信息 -->\n\t\t\t\t\t<view class=\"medicine-info\">\n\t\t\t\t\t\t<view class=\"text-container\"> \n\t\t\t\t\t\t\t<text class=\"medicine-name\">{{ item.name }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"text-container\"> \n\t\t\t\t\t\t\t<text class=\"medicine-property\">性味：{{ item.flavor }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t\t<view class=\"text-container\"> \n\t\t\t\t\t\t\t<text class=\"medicine-effect\">功效：{{ item.effect }}</text>\n\t\t\t\t\t\t</view>\n\t\t\t\t\t</view>\n\t\t\t\t</view>\n\t\t\t</view>\n\t\t</view>\r\n\t\t<!-- 加载指示器 -->\r\n\t\t<view v-if=\"isLoading\" class=\"loading-indicator\">加载中 {{ getLoadingProgress() }}%</view>\r\n\t\t<view v-if=\"!hasMore\" class=\"no-more-indicator\">没有更多了</view>\n\t</view>\n</template>\n\n<script>\n\timport { nameData } from '@/data/herbData.js';\n\tconst apiCache = {};\t// API响应缓存池（减少重复请求）\n  \n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tcolumnCount: 2,          \t// 列数\n\t\t\t\tcolumnData: [[], []], \t \t// 确保每列都有数组容器\n\t\t\t\tallMedicines: [],        \t// 所有药品数据\n\t\t\t\tisLoading: false,\t\t\t// 加载状态标志\n\t\t\t\thasMore: true,           \t// 是否有更多数据\n\t\t\t\tcurrentPage: 1,          \t// 当前页码\n\t\t\t\tpageSize: 20,            \t// 每页数据量\n\t\t\t\tshowContentSkeleton: true, \t// 骨架屏显示状态\n\t\t\t\tloadingProgress: 0,         // 加载进度百分比\n\t\t\t\tloadedIds: new Set()\t\t// 已加载ID集合（用于去重）\n\t\t\t};\n\t\t},\n\t\n\t\tmounted() {\n\t\t\t// 初始加载数据\n\t\t\tthis.loadMedicines();\n\t\t\tconsole.log(\"药材总数:\", nameData.length);\n\t\t\t\n\t\t\t// 添加滚动监听\n\t\t\tuni.$on('scrollToBottom', this.handleScrollToBottom);\n\t\t},\n\t\t\n\t\tbeforeDestroy() {\n\t\t\t// 移除滚动监听\n\t\t\tuni.$off('scrollToBottom', this.handleScrollToBottom);\n\t\t},\n    \n\t\tmethods: {\n\t\t\t// 处理滚动到底部事件\n\t\t\thandleScrollToBottom() {\n\t\t\t\tif (!this.isLoading && this.hasMore) {\n\t\t\t\t\tthis.loadMedicines();\n\t\t\t\t}\n\t\t\t},\n\t\t\t\n\t\t\tgoToContent(name){\n\t\t\t\tuni.navigateTo({\n\t\t\t\t\turl: `/pages/content/content?keyword=${name}&source=index`\n\t\t\t\t});\n\t\t\t},\n\t\t\n\t\t\t// 加载药品数据\n\t\t\tasync loadMedicines() {\n\t\t\t\tif (this.isLoading || !this.hasMore) return;\r\n\t\t\t\tthis.isLoading = true;\r\n\t\t\t\tthis.showContentSkeleton = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\t// 直接使用所有nameData，不再分页\r\n\t\t\t\t\tconst newData = await Promise.all(\r\n\t\t\t\t\t\tnameData.map(async (name) => {\r\n\t\t\t\t\t\t\t// 检查是否已加载过该数据\r\n\t\t\t\t\t\t\tif (this.loadedIds.has(name)) {\r\n\t\t\t\t\t\t\t\treturn null; // 已加载则跳过\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tconst apiData = await this.cachedRequest(name);\r\n\t\t\t\t\t\t\tthis.loadedIds.add(name); // 标记为已加载\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tid: name, // 直接使用name作为ID\r\n\t\t\t\t\t\t\t\tname,\r\n\t\t\t\t\t\t\t\timage: this.getMedicineImage(name),\r\n\t\t\t\t\t\t\t\tflavor: apiData?.flavor || apiData?.property || '暂无数据',\r\n\t\t\t\t\t\t\t\teffect: apiData?.effect || apiData?.function || '暂无数据'\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 过滤掉null值和无效数据\r\n\t\t\t\t\tconst validNewData = newData.filter(item => item !== null && item.name);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 合并数据\r\n\t\t\t\t\tthis.allMedicines = [...this.allMedicines, ...validNewData];\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新瀑布流布局\r\n\t\t\t\t\tthis.updateVisibleItems();\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 更新加载进度\r\n\t\t\t\t\tthis.loadingProgress = Math.min(\r\n\t\t\t\t\t\tMath.floor((this.loadedIds.size / nameData.length) * 100),\r\n\t\t\t\t\t\t100\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\tconsole.log(\"加载数据量:\", validNewData.length);\r\n\t\t\t\t\tconsole.log(\"当前总数据:\", this.allMedicines.length);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 检查是否还有更多数据\r\n\t\t\t\t\tif (this.loadedIds.size >= nameData.length) {\r\n\t\t\t\t\t\tthis.hasMore = false;\r\n\t\t\t\t\t\tconsole.log('所有药材数据加载完成');\r\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error('加载失败', error);\n\t\t\t\t\t// 添加错误处理UI反馈\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t\ttitle: '数据加载失败',\n\t\t\t\t\t\ticon: 'none',\n\t\t\t\t\t\tduration: 2000\n\t\t\t\t\t});\n\t\t\t\t} finally {\n\t\t\t\t\tthis.isLoading = false;\n\t\t\t\t\t// 关闭骨架屏\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.showContentSkeleton = false;\n\t\t\t\t\t}, 500);\n\t\t\t\t}\t\n\t\t\t},\n\t\t\t\n\t\t\t// 更新可见项目（瀑布流分列）\n\t\t\tupdateVisibleItems() {\n\t\t\t\t// 重置列数据\r\n\t\t\t\tthis.columnData = Array.from({ length: this.columnCount }, () => []);\r\n\t\t\t\tconst columnHeights = Array(this.columnCount).fill(0);\r\n\t\t\t\t\r\n\t\t\t\t// 按列高度动态分配项目\r\n\t\t\t\tthis.allMedicines.forEach(item => {\r\n\t\t\t\t\t// 找出当前高度最小的列\r\n\t\t\t\t\tconst minHeightIndex = columnHeights.indexOf(Math.min(...columnHeights));\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 将项目添加到该列\r\n\t\t\t\t\tthis.columnData[minHeightIndex].push(item);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 估算并更新该列的高度（假设每个项目高度大约为420rpx）\r\n\t\t\t\t\tcolumnHeights[minHeightIndex] += 420;\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\t// 强制更新视图\r\n\t\t\t\tthis.$forceUpdate();\n\t\t\t},\n\t\t\n\t\t\t// 获取药材图片\n\t\t\tgetMedicineImage(name) {\n\t\t\t\tconst imagePath = `/static/herb/${name}.jpg`;\n\t\t\t\treturn imagePath;\n\t\t\t},\n\t\t\n\t\t\t// 加载进度指示器\n\t\t\tgetLoadingProgress() {\n\t\t\t\treturn Math.min(\n\t\t\t\t\tMath.floor((this.allMedicines.length / nameData.length) * 100), \n\t\t\t\t\t100\n\t\t\t\t);\n\t\t\t},\n\t  \n\t\t\t// 添加缓存请求函数\n\t\t\tasync cachedRequest(name) {\n\t\t\t\tif (apiCache[name]) return apiCache[name];\n\t\t\t\ttry {\n\t\t\t\t\t// 完整响应对象\n\t\t\t\t\tconst response = await uni.request({\n\t\t\t\t\t\turl: `http://api.zhyunxi.com/api.php?api=87&key=d51b5be2f98dd9bdf06e0bb47dea87fc&name=${encodeURIComponent(name)}`,\n\t\t\t\t\t\ttimeout: 10000 ,// 延长至10秒\n\t\t\t\t\t\tdataType: 'json', // 强制JSON解析\n\t\t\t\t\t});\n\t\t\t\t  \n\t\t\t\t\t// 兼容两种响应结构\n\t\t\t\t\tconst res = response[1] ? response[1] : response;\n\t\t\t\t  \n\t\t\t\t\t// 增强验证逻辑\n\t\t\t\t\tif (!res || res.statusCode !== 200 || !res.data || res.data.code !== 0) {\n\t\t\t\t\t\tconsole.error(`[API异常] ${name}`, { \n\t\t\t\t\t\t  status: res.statusCode, \n\t\t\t\t\t\t  data: res.data || '无响应数据'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t  \n\t\t\t\t\t// 提取有效数据\n\t\t\t\t\tconst validData = Array.isArray(res.data.data) && res.data.data.length > 0 \n\t\t\t\t\t\t? res.data.data[0] \n\t\t\t\t\t\t: null;\n\t\t\t\t  \n\t\t\t\t\t// 新增字段有效性验证\n\t\t\t\t\tif (validData) {\n\t\t\t\t\t\t// 关键字段缺失检测\n\t\t\t\t\t\tconst isValid = validData.flavor || validData.effect || validData.property || validData.function;\n\t\t\t\t\t\tif (!isValid) {\n\t\t\t\t\t\t\tconsole.warn(`[数据字段缺失] ${name}`, validData);\n\t\t\t\t\t\t\treturn { \n\t\t\t\t\t\t\t  flavor: '数据异常', \n\t\t\t\t\t\t\t  effect: '数据异常',\n\t\t\t\t\t\t\t  _rawData: validData // 保留原始数据用于调试\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tapiCache[name] = validData;\n\t\t\t\t\treturn validData;\n\t\t\t\t} catch (e) {\n\t\t\t\t  console.error(`[网络异常] ${name}`, e.errMsg || e);\n\t\t\t\t  return null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n</script>\n\n<style>\n\t.container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tflex-grow: 1; /* 填充空间 */\n\t\twidth: 100%;\n\t\tmin-height: 100vh; \n\t\tposition: relative;\r\n\t\tpadding-bottom: 75rpx;\n\t}\n  \n\t.skeleton-container {\n\t\tpadding: 20rpx;\n\t\tdisplay: flex;\n\t\tgap: 20rpx;\n\t}\n\t\n\t.skeleton-column {\n\t\tflex: 1;\n\t}\n\t\n\t.skeleton-item {\n\t\tmargin-bottom: 30rpx;\n\t\tbackground: #fff;\n\t\tborder-radius: 16rpx;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 6rpx 18rpx rgba(0,0,0,0.08);\n\t\tpadding: 15rpx;\n\t}\n\t\n\t.skeleton-image {\n\t\theight: 240rpx;\n\t\tbackground: linear-gradient(to right, #f5f5f5, #e0e0e0, #f5f5f5);\n\t\tbackground-size: 200% 100%;\n\t\tanimation: loadingAnimation 1.5s infinite linear;\n\t\tborder-radius: 8rpx;\n\t\tmargin-bottom: 20rpx;\n\t}\n\t\n\t.skeleton-text-line {\n\t\theight: 30rpx;\n\t\tbackground: linear-gradient(to right, #f5f5f5, #e0e0e0, #f5f5f5);\n\t\tbackground-size: 200% 100%;\n\t\tanimation: loadingAnimation 1.5s infinite linear;\n\t\tborder-radius: 4rpx;\n\t\tmargin-bottom: 10rpx;\n\t}\n\t\n\t.skeleton-text-line.name {\n\t\twidth: 70%;\n\t\theight: 40rpx;\n\t\tmargin-bottom: 8rpx;\n\t}\n\t\n\t.skeleton-text-line.property {\n\t\twidth: 50%;\n\t}\n\t\n\t.skeleton-text-line.effect {\n\t\twidth: 80%;\n\t}\n\t\n\t/* 加载指示器 */\n\t.skeleton-loading-indicator {\n\t\tposition: absolute;\n\t\tbottom: 20rpx;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\twidth: 80%;\n\t\tbackground: rgba(255, 255, 255, 0.9);\n\t\tpadding: 15rpx 20rpx;\n\t\tborder-radius: 12rpx;\n\t\tbox-shadow: 0 2rpx 8rpx rgba(0,0,0,0.1);\n\t\tz-index: 100;\n\t}\n\t\n\t.loading-text {\n\t\tfont-size: 28rpx;\n\t\tcolor: #666;\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t\tmargin-bottom: 8rpx;\n\t}\n\t\n\t.loading-bar-container {\n\t\theight: 10rpx;\n\t\tbackground: #f0f0f0;\n\t\tborder-radius: 5rpx;\n\t\toverflow: hidden;\n\t}\n\t\n\t.loading-bar-progress {\n\t\theight: 100%;\n\t\tbackground: linear-gradient(90deg, #4cd964, #34e89e);\n\t\ttransition: width 0.3s ease;\n\t\tborder-radius: 5rpx;\n\t}\n\t\n\t/* 骨架屏动画 */\n\t@keyframes loadingAnimation {\n\t\t0% { background-position: 100% 50%; }\n\t\t100% { background-position: 0 50%; }\n\t}\n  \n\t.visible-container {\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\ttransform: translateZ(0); \t/* 开启GPU加速 */\n\t\twill-change: transform;     /* 提示浏览器提前优化 */\r\n\t\tmargin-bottom: 0;\n\t}\n  \n\t.text-container {\n\t\tdisplay: block; /* 独占一行 */\n\t\twidth: 100%;    /* 撑满父容器宽度 */\n\t\toverflow: hidden; \n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap; /* 禁止换行 */\n\t}\n  \n\t.column {\n\t\tflex: 0 0 50%; /* 固定宽度50% */\n\t\tmin-width: 0;\n\t\tpadding: 0 10rpx;\n\t\tbox-sizing: border-box; /* 包含padding在宽度内 */\n\t}\n\t\n\t.text-container {\n\t    display: block;\n\t    width: 100%;\n\t    text-overflow: ellipsis;\n\t\toverflow: hidden; /* 保证单行显示 */\n\t    white-space: nowrap;\n\t}\n  \n\t.medicine-box {\n\t\theight: 420rpx;\n\t\tmargin-bottom: 20rpx;\n\t\tbackground: #fff;\n\t\tborder-radius: 16rpx;\n\t\toverflow: hidden;\n\t\tbox-shadow: 0 6rpx 18rpx rgba(0,0,0,0.08);\n\t\twill-change: transform;\n\t\tcontain: strict; /* 隔离渲染影响 */\n\t}\n  \n\t.medicine-image {\n\t\twidth: 100%;\n\t\theight: 240rpx;\n\t\tbackground: linear-gradient(to right, #f6f7f8, #e9ebee, #f6f7f8);\n\t\tbackground-size: 200% 100%;\n\t}\n  \n\t.medicine-info {\n\t\tpadding: 15rpx;\n\t}\n  \n\t.medicine-name {\n\t\tdisplay: block;\n\t\tfont-size: 32rpx;\n\t\tfont-weight: bold;\n\t\tmargin-bottom: 8rpx;\n\t}\n  \n\t.medicine-property {\n\t\tfont-size: 26rpx;\n\t\tcolor: #666;\n\t}\n  \n\t.loading-indicator,\n\t.no-more-indicator {\n\t\tposition: relative;\r\n\t\tbottom: auto;\r\n\t\tleft: auto;\r\n\t\tright: auto;\r\n\t\ttext-align: center;\r\n\t\tpadding: 20rpx;\r\n\t\tcolor: #999;\r\n\t\tbackground: rgba(228, 228, 228, 0.9);\r\n\t\tz-index: 60;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\twidth: 100%;\r\n\t\tbox-sizing: border-box;\r\n\t\tmargin-bottom: 100rpx;\n\t}\n\t\n\t.medicine-effect {\n\t\tdisplay: block;\n\t\tfont-size: 26rpx;\n\t\tcolor: #000000;\n\t\tmargin-top: 5rpx;\n\t}\n</style>","import Component from 'D:/xiaochengxu/project-space/uni-杏林春暖/components/my-content-bar/my-content-bar.vue'\nwx.createComponent(Component)"],"names":["apiCache","_sfc_main","uni","nameData","name","validNewData","apiData","item","error","columnHeights","minHeightIndex","response","res","validData","e","Component"],"mappings":"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"}